//I only want migrations, rollbacks, and seeds to run when the NODE_ENV is specified
//in the knex seed/migrate command. Knex will error out if it is not specified.
if (!process.env.NODE_ENV) {
    throw new Error('NODE_ENV not set')
}

exports.up = function(knex, Promise) {
    return knex.schema.createTable('users', function(table) {
        table.increments('id').primary()
        table.string('username').notNullable()
        table.string('password').notNullable()
        table.string('oauth_provider').nullable()
        table.text('oauth_uid').nullable()
        table.string('firstname').notNullable()
        table.string('lastname').nullable()
        table.string('email').unique();
        table.string('status').defaultTo('ACTIVE')
        table.string('level').defaultTo('LEVEL')
        table.text('levelhistory')
        table.string('referrer').nullable()
        table.integer('refid').nullable()
        table.timestamp('joindate').nullable()
        table.timestamp('lastlogindate').nullable()
        table.timestamp('activation_date').nullable()
        table.string('challengesalt').nullable()
        table.boolean('showadultmerchants').defaultTo(0)
        table.integer('maxdisplayresults').defaultTo(0)
        table.string('minimumpayout').defaultTo(20)
        table.string('paymentto').defaultTo('PayPal')
        table.string('paymentemail').nullable()
        table.text('bankname')
        table.text('bsb')
        table.text('bankaccount')
        table.boolean('testuser').defaultTo(0)
        table.boolean('membershipfeecollected').defaultTo(0)
        table.integer('referralfeepaid').nullable()
        table.integer('referralamount').nullable()
        table.text('favourites')
        table.boolean('notifications').defaultTo(0)
        table.text('loginmessages')
        table.text('ipaddresses')
        table.string('lastloginipaddress').nullable()
        table.timestamp('inactivewarningsent').nullable()
        table.boolean('newsletter').defaultTo(0)
        table.boolean('daily_deal_emails').defaultTo(0)
        table.boolean('survey_emails').defaultTo(1)
        table.string('twitter_id').nullable()
        table.timestamp('paypalwarningsent').nullable()
        table.timestamp('migration_initiated').nullable()
        table.integer('ireward_id').nullable()
        table.timestamp('migration_complete').nullable()
        table.boolean('promotion').defaultTo(0)
        table.string('ref_code').nullable()
        table.float('charity_percentage').nullable()
        table.string('api_secret').nullable()
        table.float('account_balance').nullable().defaultTo(0)
        table.boolean('no_marketing').defaultTo(1)
        table.string('source').nullable()
        table.boolean('threatmetrix_profiled').nullable().defaultTo(0)
        table.integer('welcome_email_version').nullable()
        table.boolean('email_alerts').defaultTo(1)
        table.timestamp('last_transaction_date').nullable()
        table.text('browser_info').nullable()
        table.string('gender').nullable()
        table.timestamp('dob').nullable()
        table.boolean('account_reinstated').defaultTo(0)
        table.integer('cashback_share_id').nullable()
        table.boolean('addon_visit_data_collection').defaultTo(0)
        table.string('g2fa_key').nullable()
        table.string('postcode').nullable()
        table.string('phone').nullable()
        table.integer('age').nullable()
        table.integer('points').nullable()
        table.string('client_site_slug').nullable()
        table.integer('enc_type').nullable()
        table.timestamp('api_secret_generation_date').nullable()
        table.text('tmx_result_details').nullable()
        table.string('region').defaultTo('au')
        table.integer('cause_share').nullable()
        table.timestamp('cause_share_update_date').nullable()
        table.boolean('folo_updates_email').defaultTo(1)
        table.boolean('disclose_identity').defaultTo(0)
        table.string('default_currency').defaultTo('AUD')
        table.string('password_reset_token').nullable()
        table.string('password_reset_expiration').nullable()
        table.integer('cause_id').nullable()
        table.string('cause_name').nullable()
        table.integer('influencer_id').nullable()
        table.string('influencer_username').nullable()
        table.string('cause_categories').nullable()
        table.boolean('is_admin').defaultTo(0)
        table.boolean('signup_on_mobile').defaultTo(0)
        table.text('notes').nullable()
        table.integer('login_count').defaultTo(0)
        table.string('token').nullable()
        table.boolean('auto_fund').defaultTo(1)

    })
}

exports.down = function(knex, Promise) {
    //We never want to drop tables in production
    if (process.env.NODE_ENV !== 'production') {
        return knex.schema.dropTableIfExists('users')
    }
}
